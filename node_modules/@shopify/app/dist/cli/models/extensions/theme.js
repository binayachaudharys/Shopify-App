import { allThemeSpecifications } from './specifications.js';
import { path, output, environment, string } from '@shopify/cli-kit';
/**
 * Class that represents an instance of a local theme extension
 * Before creating this class we've validated that
 * the config toml file for the theme extension follow the ThemeExtensionSchema
 *
 * This class holds the public interface to interact with theme extensions
 */
export class ThemeExtensionInstance {
    constructor(options) {
        this.configuration = options.configuration;
        this.configurationPath = options.configurationPath;
        this.directory = options.directory;
        this.remoteSpecification = options.remoteSpecification;
        this.specification = options.specification;
        this.localIdentifier = path.basename(options.directory);
        this.idEnvironmentVariableName = `SHOPIFY_${string.constantize(path.basename(this.directory))}_ID`;
    }
    get graphQLType() {
        return this.specification.graphQLType.toUpperCase();
    }
    get identifier() {
        return this.specification.identifier;
    }
    get type() {
        return this.specification.identifier;
    }
    get humanName() {
        return this.remoteSpecification?.externalName ?? this.specification.externalName;
    }
    get name() {
        return this.configuration.name;
    }
    get externalType() {
        return this.remoteSpecification?.externalIdentifier ?? this.specification.externalIdentifier;
    }
    async publishURL(options) {
        const partnersFqdn = await environment.fqdn.partners();
        const parnersPath = this.specification.partnersWebIdentifier;
        return `https://${partnersFqdn}/${options.orgId}/apps/${options.appId}/extensions/${parnersPath}/${options.extensionId}`;
    }
    previewMessage() {
        const heading = output.token.heading(`${this.name} (${this.humanName})`);
        const link = output.token.link('dev doc instructions', 'https://shopify.dev/apps/online-store/theme-app-extensions/getting-started#step-3-test-your-changes');
        const message = output.content `Follow the ${link} by deploying your work as a draft`;
        return output.content `${heading}\n${message.value}\n`;
    }
}
/* Find the registered spec for a given theme type
 */
export async function themeSpecForType(type) {
    return (await allThemeSpecifications()).find((spec) => spec.identifier === type);
}
//# sourceMappingURL=theme.js.map