{"version":3,"file":"extension.js","sourceRoot":"","sources":["../../../src/cli/plugins/extension.ts"],"names":[],"mappings":"AAEA,OAAO,EAAC,OAAO,EAAC,MAAM,kBAAkB,CAAA;AAExC,OAAO,EAAC,0BAA0B,EAAC,MAAM,+BAA+B,CAAA;AAyBxE,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,KAAsB,EAA0B,EAAE;IACrF,OAAO,KAAK,IAAI,EAAE,CAAC,KAAK,CAAA;AAC1B,CAAC,CAAA;AAED,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,KAAmB,EAAyB,EAAE;IAChF,OAAO,KAAK,IAAI,EAAE,CAAC,KAAK,CAAA;AAC1B,CAAC,CAAA;AAED,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,MAAc;IAC1D,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,WAAW,CACrC,MAAM,EACN,iBAAiB,EACjB,EAAE,CACH,CAAA;IACD,MAAM,KAAK,GAAG,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACrE,OAAO,KAAK,CAAA;AACd,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,sBAAsB,CAAC,MAAc;IACzD,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,WAAW,CAAiD,MAAM,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAA;IACrH,MAAM,KAAK,GAAG,0BAA0B,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IACrE,OAAO,KAAK,CAAA;AACd,CAAC","sourcesContent":["import {UIExtensionSpec} from '../models/extensions/ui.js'\nimport {FunctionSpec} from '../models/extensions/functions.js'\nimport {plugins} from '@shopify/cli-kit'\nimport {Config} from '@oclif/core'\nimport {getArrayRejectingUndefined} from '@shopify/cli-kit/common/array'\n\n/**\n * Extension Plugins types\n *\n * Any plugin that provides extension definitions should implement `defineExtensionSpecs`\n */\ninterface HookReturnPerExtensionPlugin extends plugins.HookReturnsPerPlugin {\n  extension_specs: {\n    options: {[key: string]: never}\n    pluginReturns: {\n      [pluginName: string]: UIExtensionSpec[]\n    }\n  }\n  function_specs: {\n    options: {[key: string]: never}\n    pluginReturns: {\n      [pluginName: string]: FunctionSpec[]\n    }\n  }\n}\n\nexport type ExtensionSpecsFunction = plugins.FanoutHookFunction<'extension_specs', ''>\nexport type FunctionSpecsFunction = plugins.FanoutHookFunction<'function_specs', ''>\n\nexport const defineExtensionSpecs = (input: UIExtensionSpec): ExtensionSpecsFunction => {\n  return async () => input\n}\n\nexport const defineFunctionSpecs = (input: FunctionSpec): FunctionSpecsFunction => {\n  return async () => input\n}\n\nexport async function getListOfExtensionSpecs(config: Config): Promise<UIExtensionSpec[]> {\n  const hooks = await plugins.fanoutHooks<HookReturnPerExtensionPlugin, 'extension_specs'>(\n    config,\n    'extension_specs',\n    {},\n  )\n  const specs = getArrayRejectingUndefined(Object.values(hooks)).flat()\n  return specs\n}\n\nexport async function getListOfFunctionSpecs(config: Config): Promise<FunctionSpec[]> {\n  const hooks = await plugins.fanoutHooks<HookReturnPerExtensionPlugin, 'function_specs'>(config, 'function_specs', {})\n  const specs = getArrayRejectingUndefined(Object.values(hooks)).flat()\n  return specs\n}\n"]}